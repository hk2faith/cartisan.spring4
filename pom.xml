<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.1.RELEASE</version>
	</parent>

	<groupId>us.cartisan</groupId>
	<artifactId>cartisan-spring</artifactId>
	<version>1.0.0</version>
	<packaging>pom</packaging>

	<properties>
		<version>1.0.0</version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<modules>
		<module>cartisan-spring-core</module>
		<module>cartisan-spring-batch</module>
		<module>cartisan-spring-web</module>
		<module>cartisan-ext-aws</module>
	</modules>

	<profiles>
		<!-- Local server -->
		<profile>
			<id>local</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<build-phase>local</build-phase>
				<deploy-path>deploy</deploy-path>
			</properties>
		</profile>

		<!-- Development server -->
		<profile>
			<id>dev</id>
			<properties>
				<build-phase>dev</build-phase>
			</properties>
		</profile>

		<!-- Real server -->
		<profile>
			<id>release</id>
			<properties>
				<build-phase>release</build-phase>
			</properties>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>spring-releases</id>
			<url>https://repo.spring.io/libs-release</url>
		</repository>
		
		<!-- maven central -->
        <repository>
            <id>maven.central</id>
            <url>http://repo1.maven.org/maven2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
	</repositories>
	
	<dependencies>
		<!-- start test libs -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- end test libs -->
	</dependencies>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<reportSets>
					<reportSet>
						
						<reports>
							<!-- select non-aggregate reports -->
							<report>report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.7</version>
			</plugin>
		</plugins>
	</reporting>

	<build>
		
		<resources>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>${basedir}/src/main/resources-${build-phase}</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.8</version>
				<configuration>
					<!-- <excludes>
						<exclude>**/demographics/*.*</exclude>
					</excludes> -->
				</configuration>
				<executions>
					<execution>
						<id>prepare-agent-ut</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destfile>${basedir}/target/coverage-reports/jacoco-ut.exec</destfile>
						</configuration>
					</execution>
					<execution>
						<id>report-ut</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<datafile>${basedir}/target/coverage-reports/jacoco-ut.exec</datafile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>prepare-agent-it</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destfile>${basedir}/target/coverage-reports/jacoco-it.exec</destfile>
						</configuration>
					</execution>
					<execution>
						<id>report-it</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<datafile>${basedir}/target/coverage-reports/jacoco-it.exec</datafile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>default-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>BUNDLE</element>
									<limits>
										<!-- Please choose a real coverage ratio, not something like this 
											1% -->
										<limit>
											<counter>COMPLEXITY</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.01</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
